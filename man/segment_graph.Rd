% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Segment_Graph.R
\name{segment_graph}
\alias{segment_graph}
\title{Segment a terrestrial point cloud using graph theory.}
\usage{
segment_graph(
  las = las,
  tree.locations = NULL,
  k = NULL,
  distance.threshold = 0.38,
  use.metabolic.scale = FALSE,
  subsample.graph = 0.1,
  return.dense = FALSE,
  output_location = getwd()
)
}
\arguments{
\item{las}{LAS Description to go here.}

\item{tree.locations}{data.frame A data.frame contained the following seed information: `TreeID`,
`X`, `Y`, `Z`, and `Radius` in the same units as the .las}

\item{k}{integer Number of nearest neighbors to be used in processing ...}

\item{distance.threshold}{numeric Minimum distance (in the same units as the .las) under which 
two trees are consider one}

\item{use.metabolic.scale}{bool Description to go here.}

\item{subsample.graph}{numeric Description to go here.}

\item{return.dense}{bool Description to go here.}

\item{output_location}{character Description to go here.}

\item{plot_radius}{numeric Radius (in the same units as the .las) used to define a region of 
interest for processing}
}
\value{
a .las with the column treeID added.
}
\description{
`segment_graph` returns a .las object with a new column "treeID".
}
\details{
Preforms Individual tree segmentation following ecological principles for “growing” trees 
based on these input locations in a graph-theory approach inspired by work of Tao and 
others (2015). Point coordinates are linked together based on proximity and turned into 
a graph object, using the estimated tree bole locations as origin points, connecting individual
points back to those origins based on shortest paths within the graph network, and finally
assigning those points a unique tree identification based on the bole coordinate for which 
they are connected.
}
\examples{
\dontrun{
# set the number of threads to use in lidR
set_lidr_threads(8)

# read the laz
LASfile <- system.file("extdata", "Pine_Example.laz", package="spanner")
las = readLAS(LASfile, select = "xyzc")

# plot(las, color="Z", backend="lidRviewer", trim=30)

# find tree locations and attribute data
myTreeLocs = get_raster_eigen_treelocs(las = las, res = 0.05, pt_spacing = 0.02, 
                                       dens_threshold = 0.25, 
                                       neigh_sizes=c(0.1, 0.1, 0.25), 
                                       eigen_threshold = 0.25, 
                                       grid_slice_min = 0.666, 
                                       grid_slice_max = 2,
                                       minimum_polygon_area = 0.01, 
                                      cylinder_fit_type = "ransac", 
                                       output_location = "E:/GithubRepos/", 
                                       max_dia = 0.5, 
                                       SDvert = 0.25)

# segment the point cloud 
myTreeGraph <- segment_graph(las = las, tree.locations = myTreeLocs, k = 50, 
                             distance.threshold = 0.5,
                             use.metabolic.scale = FALSE, subsample.graph = 0.1, 
                             return.dense = FALSE,
                             output_location = "E:/GithubRepos/")

plot(myTreeGraph, color="treeID",  backend="lidRviewer")
}

}
